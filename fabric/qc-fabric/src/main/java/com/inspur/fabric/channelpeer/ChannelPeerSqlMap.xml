<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ChainChannelPeerDomain">
	<select id="getChannelOrg" parameterType="map" resultType="map">
		SELECT
			A.PEER_ID,
			A.PEER_NAME,
			A.PEER_IP,
			A.ORGAN_NAME,
			A.CHANNEL_NAME,
			A.PEER_LOCATION,
			A.EVENTHUB_LOCATION,
			DATE_FORMAT(A.UPDATE_TIME, '%Y%m%d %H:%i:%s') AS UPDATE_TIME,
			B.ORGAN_ID,
			B.ORGAN_DESC
		FROM CHAIN_PEER A, CHAIN_ORGAN B ,CHAIN_CHANNEL_PEER cp
		WHERE A.ORGAN_NAME = B.ORGAN_NAME
		and a.PEER_NAME=cp.PEER_NAME
		and cp.CHANNEL_NAME=#{CHANNEL_NAME}
			<if test="PEER_NAME !='' and PEER_NAME !=null">
				  AND a.PEER_NAME LIKE concat(concat('%',#{PEER_NAME}) ,'%')
			</if>
			<if test="PEER_IP !='' and PEER_IP!=null">
				  and a.PEER_IP LIKE concat(concat('%',#{PEER_IP}) ,'%')
			</if>
		ORDER BY A.UPDATE_TIME DESC	
	</select>
	
	<select id="getOrganizePeer" resultType="map">
		SELECT ORGANIZE_CODE,COUNT(ORGANIZE_CODE) VAL FROM organize_info o ,chain_peer p
		where o.ORGAN_NAME=p.ORGAN_NAME
		GROUP BY o.ORGANIZE_CODE
	</select>
	
	<select id="getOrganizeCount" resultType="map">
		SELECT COUNT(ORGANIZE_CODE) VAL FROM ORGANIZE_INFO where ORGANIZE_STATUS='1'
	</select>
	
	<select id="getChainChannelPeerCount" resultType="map" >
		SELECT CHANNEL_NAME, COUNT(CHANNEL_NAME) VAL 
		FROM CHAIN_CHANNEL_PEER GROUP BY CHANNEL_NAME
	</select>
	
	<select id="getChainChannelOrgCount" resultType="map">
		SELECT a.CHANNEL_NAME, count(1) VAL 
		FROM chain_channel a,chain_peer b,chain_channel_peer c 
		WHERE a.CHANNEL_NAME=c.CHANNEL_NAME
		AND c.PEER_NAME=b.PEER_NAME GROUP BY a.CHANNEL_NAME
	</select>
	
	<select id="getChainChannelPeer" parameterType="map" resultType="map">
		SELECT
			CHANNEL_NAME,
			PEER_NAME
		FROM chain_channel_peer
		WHERE CHANNEL_NAME=#{CHANNEL_NAME} AND PEER_NAME=#{PEER_NAME}
	</select>
	
	<!-- the next code is base curd -->
	<insert id="insertChainChannelPeer" parameterType="map">
		INSERT INTO chain_channel_peer(
			CHANNEL_NAME,
			PEER_NAME
		) VALUES (
			#{CHANNEL_NAME,jdbcType=VARCHAR},
			#{PEER_NAME,jdbcType=VARCHAR}
		)
	</insert>

	<update id="updateChainChannelPeer" parameterType="map">
		UPDATE chain_channel_peer SET
			CHANNEL_NAME = #{CHANNEL_NAME,jdbcType=VARCHAR},
			PEER_NAME = #{PEER_NAME,jdbcType=VARCHAR}
		WHERE CHANNEL_NAME=#{CHANNEL_NAME} AND PEER_NAME=#{PEER_NAME}
	</update>
	
	<delete id="deleteChainChannelPeer" parameterType="map">
		DELETE FROM chain_channel_peer WHERE CHANNEL_NAME=#{CHANNEL_NAME} AND PEER_NAME=#{PEER_NAME}
	</delete>

	<select id="getAllChainChannelPeerPage" parameterType="map" resultType="map">
		SELECT
			CHANNEL_NAME,
			PEER_NAME
		FROM chain_channel_peer
		<where>
			<if test="channel_nameSearch != null and channel_nameSearch != ''">
				AND CHANNEL_NAME = #{channel_nameSearch}
			</if>
			<if test="peer_nameSearch != null and peer_nameSearch != ''">
				AND PEER_NAME = #{peer_nameSearch}
			</if>
		</where>
	</select>
	
	<select id="getOrganPeerCount" resultType="map">
		SELECT O.ORGAN_NAME,COUNT(P.PEER_ID) VAL FROM CHAIN_ORGAN O ,CHAIN_PEER P
		WHERE O.ORGAN_NAME=P.ORGAN_NAME
		GROUP BY O.ORGAN_NAME
	</select>
	
	<select id="getChannelListByPeerId" resultType="map" parameterType="String">
		SELECT A.CHANNEL_NAME, C.CHANNEL_ID, C.CHANNEL_DESC, B.PEER_ID, B.PEER_NAME
		FROM CHAIN_CHANNEL_PEER A, CHAIN_PEER B, CHAIN_CHANNEL C
		WHERE A.PEER_NAME = B.PEER_NAME
		  AND A.CHANNEL_NAME = C.CHANNEL_NAME
		  AND B.PEER_ID = #{value}
	</select>
</mapper>
